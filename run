#!/bin/bash
#title          :run
#description    :Build and execute C/C++ programs
#author         :Boris Ivanov
#date           :20181216
#version        :2.0    
#usage          :run file[.c|.cpp] [arg1 arg2 ...]
#notes          :Add this script to PATH. The arguments are passed to the program on execution
#bash_version   :4.3.11(1)-release
#============================================================================

line='----------------------------------'

function echoRed() {
    echo -e "\e[91m$1\e[0m"
}

function compile() {
    binaryName=$1
    src=$2

    echoRed "Compiling $binaryName.$src:"

    if [[ $src == cpp ]]; then
        g++ $binaryName.cpp -o $binaryName -std=c++11
    else
        gcc $binaryName.c -o $binaryName -std=c99
    fi
}

function execute() {
    echoRed "Running $1:\n$line"

    binaryName=$1
    shift # get rid of $1 current value, which is the binaryName

    if [ -e /usr/bin/time ]; then
        /usr/bin/time --quiet -f $'\e[91m-------------------------------------\nExecution time: %e seconds\nMemory used: %M KB\e[0m' ./$binaryName "$@"
    else
        TIMEFORMAT=$'\e[91m----------------------------------\nExecution time: %3R seconds\e[0m'
        time ./$binaryName "$@"
    fi
    
    echoRed "Process retuned: $?"
}

# Determine src type
# .cpp / .c in the argument can be omitted.
if [[ $1 == *.cpp ]]; then 
    binaryName=${1%.*}
    src=cpp
elif [[ $1 == *.c ]]; then
    binaryName=${1%.*}
    src=c
else
    binaryName=$1
    if [[ -e ${binaryName}.c ]]; then
        src=c
    elif [[ -e ${binaryName}.cpp ]]; then
        src=cpp
    else
        echoRed `g++`
        exit
    fi
fi

shift # get rid of $1 current value, which is the source file name

# Recompile if the source file was updated or binary doesn't exist and execute if succesful compilation
if [[ !(-e $binaryName) || $binaryName -ot $binaryName.$src ]]; then 
    compile $binaryName $src && execute $binaryName "$@"
else
    execute $binaryName "$@"
fi

echoRed $line
